// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cookie_store.proto

package com.example.composepractice;

/**
 * Protobuf type {@code CookieStore}
 */
public  final class CookieStore extends
    com.google.protobuf.GeneratedMessageLite<
        CookieStore, CookieStore.Builder> implements
    // @@protoc_insertion_point(message_implements:CookieStore)
    CookieStoreOrBuilder {
  private CookieStore() {
  }
  public static final int COOKIECACHE_FIELD_NUMBER = 1;
  private static final class CookieCacheDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, com.example.composepractice.CookieInfo> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, com.example.composepractice.CookieInfo>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.example.composepractice.CookieInfo.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, com.example.composepractice.CookieInfo> cookieCache_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, com.example.composepractice.CookieInfo>
  internalGetCookieCache() {
    return cookieCache_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, com.example.composepractice.CookieInfo>
  internalGetMutableCookieCache() {
    if (!cookieCache_.isMutable()) {
      cookieCache_ = cookieCache_.mutableCopy();
    }
    return cookieCache_;
  }
  @java.lang.Override

  public int getCookieCacheCount() {
    return internalGetCookieCache().size();
  }
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  @java.lang.Override

  public boolean containsCookieCache(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetCookieCache().containsKey(key);
  }
  /**
   * Use {@link #getCookieCacheMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> getCookieCache() {
    return getCookieCacheMap();
  }
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> getCookieCacheMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetCookieCache());
  }
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  @java.lang.Override

  public com.example.composepractice.CookieInfo getCookieCacheOrDefault(
      java.lang.String key,
      com.example.composepractice.CookieInfo defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> map =
        internalGetCookieCache();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  @java.lang.Override

  public com.example.composepractice.CookieInfo getCookieCacheOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> map =
        internalGetCookieCache();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  private java.util.Map<java.lang.String, com.example.composepractice.CookieInfo>
  getMutableCookieCacheMap() {
    return internalGetMutableCookieCache();
  }

  public static final int HOSTS_FIELD_NUMBER = 2;
  private static final class HostsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> hosts_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetHosts() {
    return hosts_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableHosts() {
    if (!hosts_.isMutable()) {
      hosts_ = hosts_.mutableCopy();
    }
    return hosts_;
  }
  @java.lang.Override

  public int getHostsCount() {
    return internalGetHosts().size();
  }
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  @java.lang.Override

  public boolean containsHosts(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetHosts().containsKey(key);
  }
  /**
   * Use {@link #getHostsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getHosts() {
    return getHostsMap();
  }
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getHostsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetHosts());
  }
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getHostsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetHosts();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getHostsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetHosts();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableHostsMap() {
    return internalGetMutableHosts();
  }

  public static com.example.composepractice.CookieStore parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.example.composepractice.CookieStore parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.example.composepractice.CookieStore parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.example.composepractice.CookieStore parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.example.composepractice.CookieStore parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.example.composepractice.CookieStore parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.example.composepractice.CookieStore prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code CookieStore}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.example.composepractice.CookieStore, Builder> implements
      // @@protoc_insertion_point(builder_implements:CookieStore)
      com.example.composepractice.CookieStoreOrBuilder {
    // Construct using com.example.composepractice.CookieStore.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override

    public int getCookieCacheCount() {
      return instance.getCookieCacheMap().size();
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */
    @java.lang.Override

    public boolean containsCookieCache(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return instance.getCookieCacheMap().containsKey(key);
    }

    public Builder clearCookieCache() {
      copyOnWrite();
      instance.getMutableCookieCacheMap().clear();
      return this;
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */

    public Builder removeCookieCache(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableCookieCacheMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getCookieCacheMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> getCookieCache() {
      return getCookieCacheMap();
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> getCookieCacheMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getCookieCacheMap());
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */
    @java.lang.Override

    public com.example.composepractice.CookieInfo getCookieCacheOrDefault(
        java.lang.String key,
        com.example.composepractice.CookieInfo defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> map =
          instance.getCookieCacheMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */
    @java.lang.Override

    public com.example.composepractice.CookieInfo getCookieCacheOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> map =
          instance.getCookieCacheMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */
    public Builder putCookieCache(
        java.lang.String key,
        com.example.composepractice.CookieInfo value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableCookieCacheMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
     */
    public Builder putAllCookieCache(
        java.util.Map<java.lang.String, com.example.composepractice.CookieInfo> values) {
      copyOnWrite();
      instance.getMutableCookieCacheMap().putAll(values);
      return this;
    }

    @java.lang.Override

    public int getHostsCount() {
      return instance.getHostsMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */
    @java.lang.Override

    public boolean containsHosts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return instance.getHostsMap().containsKey(key);
    }

    public Builder clearHosts() {
      copyOnWrite();
      instance.getMutableHostsMap().clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */

    public Builder removeHosts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableHostsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getHostsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getHosts() {
      return getHostsMap();
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getHostsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getHostsMap());
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getHostsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getHostsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getHostsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getHostsMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */
    public Builder putHosts(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableHostsMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; hosts = 2;</code>
     */
    public Builder putAllHosts(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableHostsMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:CookieStore)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.example.composepractice.CookieStore();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "cookieCache_",
            CookieCacheDefaultEntryHolder.defaultEntry,
            "hosts_",
            HostsDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0002\u0000\u0000\u00012\u00022";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.example.composepractice.CookieStore> parser = PARSER;
        if (parser == null) {
          synchronized (com.example.composepractice.CookieStore.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.example.composepractice.CookieStore>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:CookieStore)
  private static final com.example.composepractice.CookieStore DEFAULT_INSTANCE;
  static {
    CookieStore defaultInstance = new CookieStore();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      CookieStore.class, defaultInstance);
  }

  public static com.example.composepractice.CookieStore getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<CookieStore> PARSER;

  public static com.google.protobuf.Parser<CookieStore> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

