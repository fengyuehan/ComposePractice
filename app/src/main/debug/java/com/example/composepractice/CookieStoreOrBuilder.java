// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cookie_store.proto

package com.example.composepractice;

public interface CookieStoreOrBuilder extends
    // @@protoc_insertion_point(interface_extends:CookieStore)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  int getCookieCacheCount();
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  boolean containsCookieCache(
      java.lang.String key);
  /**
   * Use {@link #getCookieCacheMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.example.composepractice.CookieInfo>
  getCookieCache();
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */
  java.util.Map<java.lang.String, com.example.composepractice.CookieInfo>
  getCookieCacheMap();
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */

  com.example.composepractice.CookieInfo getCookieCacheOrDefault(
      java.lang.String key,
      com.example.composepractice.CookieInfo defaultValue);
  /**
   * <code>map&lt;string, .CookieInfo&gt; cookieCache = 1;</code>
   */

  com.example.composepractice.CookieInfo getCookieCacheOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  int getHostsCount();
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  boolean containsHosts(
      java.lang.String key);
  /**
   * Use {@link #getHostsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getHosts();
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getHostsMap();
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */

  java.lang.String getHostsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; hosts = 2;</code>
   */

  java.lang.String getHostsOrThrow(
      java.lang.String key);
}
